{"version":3,"sources":["Sounds/sounds.js","Components/DrumPad.js","actions/displayActions.js","actions/types.js","Components/PadKit.js","Components/Display.js","Components/Switch.js","Components/KitSwitch.js","Components/Mixer.js","reducers/displayReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["kitOne","keyCode","keyTrigger","id","url","kitTwo","activeStyle","backgroundColor","inactiveStyle","boxShadow","DrumPad","props","state","padStyle","audio","React","createRef","playAudio","bind","handleKeyPress","activatePad","document","addEventListener","this","removeEventListener","power","setState","node","current","currentTime","play","setTimeout","updateDisplay","clipId","replace","e","className","onClick","style","src","clip","ref","Component","connect","currentDisplay","display","dispatch","type","payload","currentPadBank","padKit","map","drumObj","i","soundsArr","key","powerSwitch","powerSlider","bgChange","text","currentPadBankId","updateKit","kitSlider","volume","adjustVolume","event","target","value","slice","call","getElementsByClassName","forEach","sound","min","max","step","onChange","initialState","combineReducers","action","Math","round","middleware","thunk","store","createStore","rootReducer","applyMiddleware","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cb1b3b05.chunk.js","sourcesContent":["export const kitOne = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Clap',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: \"Kick-n'-Hat\",\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Kick',\r\n    url: 'https://freewavesamples.com/files/Bass-Drum-1.wav'\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n  }\r\n];\r\n\r\nexport const kitTwo = [\r\n  {\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Chord-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\r\n  },\r\n  {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Chord-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\r\n  },\r\n  {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Chord-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\r\n  },\r\n  {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Shaker',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\r\n  },\r\n  {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\r\n  },\r\n  {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\r\n  },\r\n  {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: 'Punchy-Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\r\n  },\r\n  {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Side-Stick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\r\n  },\r\n  {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Snare',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\r\n  }\r\n];\r\n\r\nexport const activeStyle = {\r\n  backgroundColor: 'red'\r\n};\r\n\r\nexport const inactiveStyle = {\r\n  backgroundColor: 'grey',\r\n  boxShadow: '3px 3px 5px black'\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Styles/DrumPad.scss';\r\nimport { connect } from 'react-redux';\r\nimport { updateDisplay } from '../actions/displayActions';\r\n\r\nimport { activeStyle, inactiveStyle } from '../Sounds/sounds';\r\n\r\nclass DrumPad extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      padStyle: inactiveStyle\r\n    };\r\n    this.audio = React.createRef();\r\n    this.playAudio = this.playAudio.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.activatePad = this.activatePad.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyPress);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n  activatePad() {\r\n    if (this.props.power) {\r\n      this.state.padStyle.backgroundColor === 'red'\r\n        ? this.setState({\r\n            padStyle: inactiveStyle\r\n          })\r\n        : this.setState({\r\n            padStyle: activeStyle\r\n          });\r\n    }\r\n  }\r\n  playAudio() {\r\n    if (this.props.power) {\r\n      const node = this.audio.current;\r\n      node.currentTime = 0;\r\n      node.play();\r\n      this.activatePad();\r\n      setTimeout(() => this.activatePad(), 100);\r\n      this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\r\n    }\r\n  }\r\n\r\n  handleKeyPress(e) {\r\n    if (e.keyCode === this.props.keyCode) {\r\n      this.playAudio();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"drum-pad\"\r\n        id={this.props.clipId}\r\n        onClick={this.playAudio}\r\n        style={this.state.padStyle}\r\n      >\r\n        <audio\r\n          id={this.props.keyTrigger}\r\n          src={this.props.clip}\r\n          className=\"clip\"\r\n          ref={this.audio}\r\n        />\r\n        {this.props.keyTrigger}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nDrumPad.propTypes = {\r\n  updateDisplay: PropTypes.func.isRequired,\r\n  currentDisplay: PropTypes.string,\r\n  power: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentDisplay: state.display.clipId,\r\n  power: state.display.power\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateDisplay }\r\n)(DrumPad);\r\n","import { UPDATE_DISPLAY } from './types';\r\nimport { POWER_SWITCH } from './types';\r\nimport { ADJUST_VOLUME } from './types';\r\nimport { CLEAR_DISPLAY } from './types';\r\nimport { UPDATE_KIT } from './types';\r\n\r\nexport const updateDisplay = clipId => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_DISPLAY,\r\n    payload: clipId\r\n  });\r\n};\r\n\r\nexport const updateKit = () => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_KIT\r\n  });\r\n};\r\n\r\nexport const powerSwitch = () => dispatch => {\r\n  dispatch({\r\n    type: POWER_SWITCH\r\n  });\r\n};\r\n\r\nexport const adjustVolume = event => dispatch => {\r\n  dispatch({\r\n    type: ADJUST_VOLUME,\r\n    payload: event.target.value\r\n  });\r\n  setTimeout(\r\n    () =>\r\n      dispatch({\r\n        type: CLEAR_DISPLAY\r\n      }),\r\n    1000\r\n  );\r\n};\r\n","export const UPDATE_DISPLAY = 'UPDATE_DISPLAY';\r\nexport const ADJUST_VOLUME = 'ADJUST_VOLUME';\r\nexport const POWER_SWITCH = 'POWER_SWITCH';\r\nexport const CLEAR_DISPLAY = 'CLEAR_DISPLAY';\r\nexport const UPDATE_KIT = 'UPDATE_KIT';\r\n","import React from 'react';\r\nimport './Styles/PadKit.scss';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DrumPad from './DrumPad';\r\n\r\nconst PadKit = props => {\r\n  let padKit;\r\n  props.power\r\n    ? (padKit = props.currentPadBank.map((drumObj, i, soundsArr) => {\r\n        return (\r\n          <DrumPad\r\n            clipId={soundsArr[i].id}\r\n            key={soundsArr[i].id}\r\n            clip={soundsArr[i].url}\r\n            keyTrigger={soundsArr[i].keyTrigger}\r\n            keyCode={soundsArr[i].keyCode}\r\n          />\r\n        );\r\n      }))\r\n    : (padKit = props.currentPadBank.map((drumObj, i, soundsArr) => {\r\n        return (\r\n          <DrumPad\r\n            clipId={soundsArr[i].id}\r\n            key={soundsArr[i].id}\r\n            clip=\"#\"\r\n            keyTrigger={soundsArr[i].keyTrigger}\r\n            keyCode={soundsArr[i].keyCode}\r\n          />\r\n        );\r\n      }));\r\n  return <div className=\"pad-kit\">{padKit}</div>;\r\n};\r\nPadKit.propTypes = {\r\n  power: PropTypes.bool.isRequired,\r\n  currentPadBank: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  power: state.display.power,\r\n  currentPadBank: state.display.currentPadBank\r\n});\r\n\r\nexport default connect(mapStateToProps)(PadKit);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './Styles/Display.scss';\r\n\r\nconst Display = props => {\r\n  return (\r\n    <div id=\"display\">\r\n      <p>{props.power ? props.currentDisplay : ''}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nDisplay.propTypes = {\r\n  currentDisplay: PropTypes.string,\r\n  power: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentDisplay: state.display.display,\r\n  power: state.display.power\r\n});\r\n\r\nexport default connect(mapStateToProps)(Display);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { powerSwitch } from '../actions/displayActions';\r\nimport './Styles/Switch.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Switch = props => {\r\n  let powerSlider = '';\r\n  let bgChange = '';\r\n  if (!props.power) {\r\n    powerSlider = 'checked';\r\n    bgChange = 'bgChange';\r\n  } else {\r\n    powerSlider = '';\r\n    bgChange = '';\r\n  }\r\n  return (\r\n    <div className=\"control\">\r\n      <p>{props.text}</p>\r\n      <label className=\"switch\">\r\n        <input type=\"checkbox\" onClick={props.powerSwitch} />\r\n        <span className={`slider-before ${powerSlider}`} />\r\n        <span className={`slider ${bgChange}`} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nSwitch.propTypes = {\r\n  power: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  power: state.display.power\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { powerSwitch }\r\n)(Switch);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateKit } from '../actions/displayActions';\r\nimport './Styles/Switch.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst KitSwitch = props => {\r\n  let kitSlider = '';\r\n  let bgChange = '';\r\n  if (props.currentPadBankId === 'Smooth Piano Kit') {\r\n    kitSlider = 'checked';\r\n    bgChange = 'bgChange';\r\n  } else {\r\n    kitSlider = '';\r\n    bgChange = '';\r\n  }\r\n  return (\r\n    <div className=\"control\">\r\n      <p>{props.text}</p>\r\n      <label className=\"switch\">\r\n        <input type=\"checkbox\" onClick={props.updateKit} />\r\n        <span className={`slider-before ${kitSlider}`} />\r\n        <span className={`slider ${bgChange}`} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nKitSwitch.propTypes = {\r\n  currentPadBankId: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  currentPadBankId: state.display.currentPadBankId\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateKit }\r\n)(KitSwitch);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport './Styles/Mixer.scss';\r\nimport { adjustVolume } from '../actions/displayActions';\r\n\r\nconst Mixer = props => {\r\n  const clips = [].slice.call(document.getElementsByClassName('clip'));\r\n  clips.forEach(sound => {\r\n    sound.volume = props.volume;\r\n  });\r\n\r\n  return (\r\n    <div className=\"volume-slider\">\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"1\"\r\n        step=\"0.01\"\r\n        value={props.volume}\r\n        onChange={props.adjustVolume}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nMixer.propTypes = {\r\n  adjustVolume: PropTypes.func.isRequired,\r\n  volume: PropTypes.number.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  volume: state.display.volume\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { adjustVolume }\r\n)(Mixer);\r\n","import { UPDATE_DISPLAY } from '../actions/types';\r\nimport { POWER_SWITCH } from '../actions/types';\r\nimport { ADJUST_VOLUME } from '../actions/types';\r\nimport { CLEAR_DISPLAY } from '../actions/types';\r\nimport { UPDATE_KIT } from '../actions/types';\r\nimport { kitOne, kitTwo } from '../Sounds/sounds';\r\n\r\nconst initialState = {\r\n  display: '',\r\n  power: true,\r\n  volume: 0.3,\r\n  currentPadBank: kitOne,\r\n  currentPadBankId: 'Heater Kit'\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_DISPLAY:\r\n      return {\r\n        ...state,\r\n        display: action.payload\r\n      };\r\n    case UPDATE_KIT:\r\n      if (state.power) {\r\n        if (state.currentPadBank === kitOne) {\r\n          return {\r\n            ...state,\r\n            currentPadBank: kitTwo,\r\n            display: 'Smooth Piano Kit',\r\n            currentPadBankId: 'Smooth Piano Kit'\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            currentPadBank: kitOne,\r\n            display: 'Heater Kit',\r\n            currentPadBankId: 'Heater Kit'\r\n          };\r\n        }\r\n      } else {\r\n        return state;\r\n      }\r\n\r\n    case POWER_SWITCH:\r\n      return {\r\n        ...state,\r\n        power: !state.power,\r\n        display: ''\r\n      };\r\n    case ADJUST_VOLUME:\r\n      return {\r\n        ...state,\r\n        display: `Volume: ${Math.round(action.payload * 100)}`,\r\n        volume: action.payload\r\n      };\r\n    case CLEAR_DISPLAY:\r\n      return {\r\n        ...state,\r\n        display: ''\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport displayReducer from './displayReducer.js';\r\n\r\nexport default combineReducers({\r\n  display: displayReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { Provider } from 'react-redux';\n\nimport PadKit from './Components/PadKit';\nimport Display from './Components/Display';\nimport Switch from './Components/Switch';\nimport KitSwitch from './Components/KitSwitch';\nimport Mixer from './Components/Mixer';\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div id=\"drum-machine\">\n          <PadKit />\n          <div className=\"controls-container\">\n            <Switch text=\"Power\" />\n            <Display />\n            <Mixer />\n            <KitSwitch text=\"Kit\" />\n          </div>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}